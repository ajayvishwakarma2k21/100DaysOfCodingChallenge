steps and key learning -->
1. sort the array
2. take i, j and k and add ith, jth and kth element.
3. skip the duplicate element;

key things to be noticed --> 
1. dont use new keyword in --> ans.add(Arrays.asList(...));
2. use while( J < K && ...) for skiping...


class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(nums);
        for(int i = 0; i< nums.length; i++){
            if(i != 0 && nums[i] == nums[i -1])continue;
            int j = i+1, k = nums.length - 1;
            while(j < k){
                int sum = nums[i] + nums[j] + nums[k];
                if(sum > 0){
                    k--;
                }
                else if(sum < 0){
                j++;
                }
                else {
                    ans.add(Arrays.asList(nums[i], nums[j], nums[k])); 
                    j++; 
                    k--;
                while(j < k && nums[j] == nums[j - 1])j++;
                while(j < k && nums[k] == nums[k + 1])k--;
                }
            }
        }
        return ans;     
    }
}
