/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        TreeNode curr = root;
        while(curr != null){
          if(curr.left == null){
            // left is null so add curr value in the list and set curr to right;
            ans.add(curr.val);
            curr = curr.right;
          }else{
            //left is not null;
            TreeNode prev = curr.left;
            while(prev.right != null && prev.right != curr){
              prev = prev.right;
            }
            if(prev.right == null){
              prev.right  = curr;
              curr = curr.left;
            }else{
              prev.right = null;
              ans.add(curr.val);
              curr  = curr.right;
            }

          }
        }
        return ans;
    }
}
