class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        solve(ans, candidates, 0, target, new ArrayList<Integer>());
        return ans;
    }
    public void solve(List<List<Integer>> ans, int[] arr, int index, int target, ArrayList<Integer> temp){
      if(index == arr.length){
        if(target==0){
          ans.add(new ArrayList<>(temp));
        }
        return;
      }
      if(arr[index] <= target){
        temp.add(arr[index]);
        solve(ans, arr, index, target - arr[index], temp);
        temp.remove(temp.size() -1);
      }
      // for next index
      solve(ans, arr, index + 1, target, temp);
    }
}
