class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int n = text1.length();
        int m = text2.length();

        int[][] dp = new int[n][m];
        for(int i = 0; i < n; i++){
          Arrays.fill(dp[i], -1);
        }

        return solve(text1, text2, n - 1, m - 1, dp);
    }

    private int solve(String text1, String text2, int len1, int len2, int[][] dp){
      if(len1 < 0 || len2 < 0)return 0;
      if(dp[len1][len2] != -1){
        return dp[len1][len2];
      }

      if(text1.charAt(len1)== text2.charAt(len2)){
        dp[len1][len2] = 1 + solve(text1, text2, len1 - 1, len2 - 1, dp);
      }else{
        dp[len1][len2] = Math.max(solve(text1, text2, len1 -1, len2, dp), solve(text1, text2, len1, len2 -1, dp));
      }
      return dp[len1][len2];
    }
}
