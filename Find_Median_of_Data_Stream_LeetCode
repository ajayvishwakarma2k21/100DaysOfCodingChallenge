class MedianFinder {
    PriorityQueue<Integer> minHeap;
    PriorityQueue<Integer> maxHeap;
    public MedianFinder() {
        minHeap = new PriorityQueue<>();
        maxHeap = new PriorityQueue<>(Collections.reverseOrder());
    }
    
    public void addNum(int num) {
        if(maxHeap.size()== 0 || num < maxHeap.peek()){
          maxHeap.add(num);
        }else{
          minHeap.add(num);
        }

        if(minHeap.size() > maxHeap.size()){
          maxHeap.add(minHeap.poll());
        }

        if(maxHeap.size() - minHeap.size() > 1){
          minHeap.add(maxHeap.poll());
        }
    }
    
    public double findMedian() {
        if(maxHeap.size()== minHeap.size()){
          return (maxHeap.peek() + minHeap.peek())/2.0;
        }else{
          return (double)maxHeap.peek();
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
